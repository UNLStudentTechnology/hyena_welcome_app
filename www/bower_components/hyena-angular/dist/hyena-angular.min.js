"use strict";"format global";"deps angular";angular.module("hyenaAngular",["ngStorage","firebase","ngTagsInput"]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("USER_ROLES",{all:"*",admin:"admin",editor:"editor",guest:"guest"}),angular.module("hyenaAngular").controller("ApplicationCtrl",function($rootScope,$scope,$location,$state,$window,$firebase,AuthService,UserService,AppFirebase,Notification,FBURL,AUTH_EVENTS,AUTH_SCOPE){$scope.appLoaded=null,$scope.currentUser=null,$scope.requireAuth=null,$rootScope.currentGroupId=0,$rootScope.$on("$stateChangeStart",function(event,toState){var cleanUrl=toState.data.cleanUrl||!0;$scope.appLoaded=!1,angular.isDefined(toState.data)&&angular.isDefined(toState.data.requireAuth)&&($scope.requireAuth=toState.data.requireAuth||!1,null===$scope.currentUser&&toState.data.requireAuth?AuthService.flow(AUTH_SCOPE,cleanUrl).then(function(response){$scope.appLoaded=!0,$scope.currentUser=response},function(response){console.error("There was an error logging in.",response)}):$scope.appLoaded=!0)}),AppFirebase.getAuthRef().$onAuth(function(authData){!authData&&$scope.currentUser&&$rootScope.$broadcast(AUTH_EVENTS.notAuthenticated)}),$rootScope.$on(AUTH_EVENTS.notAuthenticated,function(){AuthService.expire(),$scope.currentUser=null,$scope.requireAuth&&(Notification.showModal("Please log in","#modal-content-login","takeover"),AuthService.login())}),$scope.setCurrentUser=function(user){$scope.currentUser=user},$scope.logOutCurrentUser=function(){$scope.currentUser=null,AuthService.logout()},$scope.logIn=function(){AuthService.check()||AuthService.login()},$scope.toggleMainDrawer=function(){document.querySelector("unl-layout").toggleDrawer()},$scope.closeMainDrawer=function(){document.querySelector("unl-layout").closeDrawer()},$scope.hideMainDrawer=function(){document.querySelector("unl-layout").forceHideDrawer()},$scope.showMainDrawer=function(){document.querySelector("unl-layout").forceShowDrawer()},$scope.showLoginWindow=function(){Notification.setModalContent("#modal-content-login")},$scope.closeModal=function(){Notification.hideModal()},$scope.go=function(path,pageAnimationClass){$scope.pageAnimationClass="undefined"==typeof pageAnimationClass?"animate-slide-right":pageAnimationClass,"back"===path?($scope.pageAnimationClass="animate-slide-left",$window.history.back()):$location.path(path)}}),angular.module("hyenaAngular").directive("availabilityCalendar",function(){return{template:'<div ng-include="getTemplateUrl()"></div>',restrict:"E",scope:{asset:"=",schedule:"=",bookings:"=",type:"=",addBooking:"&onChange"},replace:!1,link:function(scope,element,attrs){function setDateVariables(){scope.startDay=moment().dayOfYear(),scope.numDays=5,scope.endDay=scope.startDay+scope.numDays}angular.isDefined(attrs.type)&&(console.log(attrs.type),scope.typeAvailability="availability"==attrs.type,scope.type=attrs.type,console.log(scope.typeAvailability)),scope.getTemplateUrl=function(){var path="views/availability_calendar/";switch(attrs.type){case"availability":return path+"schedule-calendar.html";case"booking":return path+"booking-calendar.html";default:return path+"booking-calendar.html"}},setDateVariables(),scope.moment=moment,setInterval(setDateVariables,18e5),scope.$watch("asset",function(assetValue){angular.isDefined(assetValue)&&(scope.hide_before=moment(assetValue.hide_hour_before,"hh:mm a").hour()||0,scope.hide_after=moment(assetValue.hide_hour_after,"hh:mm a").hour()||23)}),scope.doBooking=function(day,hour){scope.addBooking()(day,scope.convertKeyToNum(hour))},scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},scope.hourToMinutes=function(value){return value=60*value,moment().startOf("day").minutes(value)},scope.minutesToHour=function(value){return value/60},scope.convertKeyToNum=function(value){return scope.asset.slot_size/60*value}}}}),angular.module("hyenaAngular").directive("bindPolymer",["$parse",function($parse){return{restrict:"A",scope:!1,compile:function($element,$attr){var attrMap={};for(var prop in $attr)if(angular.isString($attr[prop])){var _match=$attr[prop].match(/\{\{\s*([\[\]\$\.\w]+)\s*\}\}/);_match&&(attrMap[prop]=$parse(_match[1]))}return function(scope,element){var observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){var attributeName,newValue,oldValue,getter;attributeName=mutation.attributeName,attributeName in attrMap&&(newValue=element.attr(attributeName),getter=attrMap[attributeName],oldValue=getter(scope),oldValue!=newValue&&angular.isFunction(getter.assign)&&getter.assign(scope,newValue))}),scope.$apply()});observer.observe(element[0],{attributes:!0}),scope.$on("$destroy",observer.disconnect.bind(observer))}}}}]),angular.module("hyenaAngular").value("FieldTypes",{text:["Text","should be text"],email:["Email","should be an email address"],number:["Number","should be a number"],date:["Date","should be a date"],datetime:["Datetime","should be a datetime"],time:["Time","should be a time"],month:["Month","should be a month"],week:["Week","should be a week"],url:["URL","should be a URL"],tel:["Phone Number","should be a phone number"],color:["Color","should be a color"]}).directive("selfValidation",function(FieldTypes){return{templateUrl:"views/partials/self-validation-input.html",restrict:"EA",replace:!0,scope:{model:"=",field:"@",type:"@",required:"@",placeholder:"@"},link:function($scope){$scope.types=FieldTypes}}}),angular.module("hyenaAngular").directive("user",function(UserService){return{restrict:"A",scope:{userValue:"=userModel"},link:function(scope){scope.userValue;scope.$watch("userValue",function(newValue){angular.isDefined(newValue)&&!angular.isObject(newValue)&&UserService.get(newValue).then(function(response){scope.userValue=response.data})})}}}),angular.module("hyenaAngular").factory("AppFirebase",function(FBURL,$firebase,$firebaseAuth){var appFirebase=new Firebase(FBURL),FirebaseService={getRef:function(){return appFirebase},getAuthRef:function(){return $firebaseAuth(appFirebase)},authenticate:function(authToken){var authRef=$firebaseAuth(appFirebase);return authRef.$authWithCustomToken(authToken)}};return FirebaseService}),angular.module("hyenaAngular").filter("uni_year",function(){return function(input){switch(input){case"FR":return"Freshman";case"SO":return"Sophomore";case"JR":return"Junior";case"SR":return"Senior";case"GR":return"Graduate";case"staff":return"Staff";default:return"N/A"}}}).filter("platform_role",function(){return function(input){switch(input){case 0:return"Member";case 41:return"Group Admin";case 51:return"Group Staff";default:return"Member"}}}).filter("toArray",function(){return function(obj){return obj instanceof Object?Object.keys(obj).map(function(key){return Object.defineProperty(obj[key],"$key",{enumerable:!1,value:key})}):obj}}).filter("toBool",function(){return function(value){return"true"===value}}),angular.module("hyenaAngular").service("AppService",function AppService($http,AuthService,APIPATH,APIKEY,PLATFORM_ROOT){var AppService=("token="+AuthService.authToken(),{get:function(appId){return scope=scope||"",$http.get(PLATFORM_ROOT+"apps/"+appId)},all:function(offset,limit){return offset=offset||0,limit=limit||0,$http.get(PLATFORM_ROOT+"apps?offset="+offset+"&limit="+limit)}});return AppService}),angular.module("hyenaAngular").service("AuthService",function($http,$sessionStorage,$localStorage,$location,$q,UserService,APIKEY,APIPATH,AppFirebase){var firebaseAuthRef=AppFirebase.getRef(),AuthService={flow:function(scope,cleanUrl){cleanUrl=cleanUrl||!0,scope=scope||"";var deferred=$q.defer();if(angular.isDefined($location.search().token)){var authToken=$location.search().token;AppFirebase.authenticate(authToken).then(function(authData){AuthService.manualLogin(authData.uid,authToken,scope).then(function(user){console.log("BAJIOF"),deferred.resolve(user.data)},function(error){deferred.reject(error),console.log("Login failed:",error)})},function(error){deferred.reject(error),console.error("Failed to authenticate token:",error,authToken)})}else AuthService.check()&&null!==AppFirebase.getAuthRef().$getAuth()?AuthService.user(scope).then(function(user){deferred.resolve(user.data)}):AuthService.login();return deferred.promise},login:function(){$sessionStorage.currentRoute=window.location.href,window.location.replace(APIPATH+"users/login?api_key="+APIKEY+"&callback="+window.location.href)},manualLogin:function(userId,authToken,scope){angular.isUndefined(scope)&&(scope="");var auth_user=UserService.get(userId,scope);return auth_user.then(function(){return AuthService.createAuthSession(userId,authToken)?AuthService.user(scope):!1})},logout:function(){AuthService.expire(),window.location.replace(APIPATH+"users/logout?api_key="+APIKEY)},createAuthSession:function(userId,authToken){return $localStorage.auth=!0,$localStorage.authUser=userId,$localStorage.authToken=authToken,!0},user:function(scope){angular.isUndefined(scope)&&(scope="");var userId=AuthService.userId();return UserService.get(userId,scope)},userId:function(){return $localStorage.auth?$localStorage.authUser:!1},authToken:function(){return $localStorage.authToken},check:function(){return!!$localStorage.auth},expire:function(){angular.isDefined(firebaseAuthRef)&&firebaseAuthRef.unauth(),delete $localStorage.auth,delete $localStorage.authUser,delete $localStorage.authToken}};return AuthService}),angular.module("hyenaAngular").service("FirebaseGroupService",function FirebaseGroupService($http,$firebase,AppFirebase,AuthService,APIPATH,APIKEY){var groupsRef=AppFirebase.getRef().child("groups"),FirebaseGroupService={get:function(groupId,scope){return scope=scope||"",$http.get(APIPATH+"groups/"+groupId+"?with="+scope+"&api_key="+APIKEY)},add:function(group,groupId){return $firebase(groupsRef).$set(groupId,group)},exists:function(groupId){var groupExistsResponse=$firebase(groupsRef.child(groupId)).$asObject();return groupExistsResponse.$loaded(function(){return null!==groupExistsResponse.$value})},existsOrAdd:function(groupId){var groupExistsPromise=FirebaseGroupService.exists(groupId);groupExistsPromise.then(function(response){if(!response){var getGroupPromise=FirebaseGroupService.get(groupId);getGroupPromise.then(function(response){var newGroup={title:response.data.title,description:response.data.description};FirebaseGroupService.add(newGroup,groupId).then(function(response){console.log("Group added to Firebase",response)})})}})}};return FirebaseGroupService}),angular.module("hyenaAngular").service("GroupService",function GroupService($http,AuthService,APIPATH,APIKEY){var tokenString="token="+AuthService.authToken(),apiString="api_key="+APIKEY,GroupService={get:function(groupId,scope){return scope=scope||"",$http.get(APIPATH+"groups/"+groupId+"?with="+scope+"&"+apiString)},update:function(groupId,appData){return $http.put(APIPATH+"groups/"+groupId+"?"+tokenString,appData)},add:function(group){return $http.post(APIPATH+"groups?"+tokenString+"&"+apiString,group)},usersAdd:function(groupId,users){return $http.post(APIPATH+"groups/"+groupId+"/users?"+tokenString+"&"+apiString,users)},usersUpdate:function(groupId,userId,userData){return $http.put(APIPATH+"groups/"+groupId+"/users/"+userId+"?"+apiString+"&"+tokenString,userData)},usersRemove:function(groupId,users){return $http.post(APIPATH+"groups/"+groupId+"/users/delete?"+tokenString+"&"+apiString,users)},hasUser:function(groupId,userId){return $http.get(APIPATH+"groups/"+groupId+"/users/"+userId+"?"+apiString)},appsAdd:function(groupId,apps){return $http.post(APIPATH+"groups/"+groupId+"/apps?"+apiString+"&"+tokenString,apps)},appsRemove:function(groupId,apps){return $http.post(APIPATH+"groups/"+groupId+"/apps/delete?"+apiString+"&"+tokenString,apps)}};return GroupService}),angular.module("hyenaAngular").factory("AuthInterceptor",function($rootScope,$q,AUTH_EVENTS){return{responseError:function(response){return $rootScope.$broadcast({401:AUTH_EVENTS.notAuthenticated,403:AUTH_EVENTS.notAuthorized,419:AUTH_EVENTS.sessionTimeout,440:AUTH_EVENTS.sessionTimeout}[response.status],response),$q.reject(response)}}}),angular.module("hyenaAngular").service("Notification",function(){var NotificationService={show:function(text,type){var toast=document.querySelector("unl-toast");toast.setAttribute("text",text),toast.setAttribute("type",type),toast.show()},showModal:function(heading,content,type){var modal=document.querySelector("#unl-modal"),newContent=document.querySelector(content);modal.setAttribute("heading",heading),modal.setAttribute("type",type||"lift"),modal.contents=newContent,modal.show()},hideModal:function(){var modal=document.querySelector("#unl-modal");modal.close()},setModalContent:function(content){var modal=document.querySelector("#unl-modal"),newContent=document.querySelector(content);modal.contents=newContent}};return NotificationService}),angular.module("hyenaAngular").service("ReservationService",function($firebase,$q){var reservationsRef=new Firebase("https://hyena-reservations.firebaseio.com/"),minutesInDay=1440,ReservationService={asset:function(assetId){return assetId=assetId.trim(),$firebase(reservationsRef.child("/assets/"+assetId))},user:function(userId){userId=userId.trim();var user=$firebase(reservationsRef.child("/users/"+userId));return user.$asObject().$loaded().then(function(data){console.log(data),null===data.$value&&ReservationService.addUser(userId)}),user},assets:function(assets){if(angular.isUndefined(assets)||!Array.isArray(assets)||1===assets.length&&""===assets[0])return $q.reject("Malformed data");for(var promises=[],i=0;i<assets.length;i++)""!==assets[i]&&promises.push(ReservationService.schedule(assets[i]).$asArray().$loaded());return $q.all(promises)},groupAssets:function(groupId,limit){limit=limit||20,groupId=parseInt(groupId);var assetRef=reservationsRef.child("assets").orderByChild("group_id").equalTo(groupId).limitToFirst(limit);return $firebase(assetRef)},add:function(asset,groupId){return $firebase(reservationsRef.child("/assets")).$push(asset).then(function(response){return $firebase(reservationsRef.child("/groups/"+groupId+"/assets")).$set(response.key(),!0),response})},addUser:function(userId){userId=userId.trim();var user={hide_hour_before:"0700am",hide_hour_after:"0800pm",slot_size:30,units:1};return $firebase(reservationsRef.child("/users")).$set(userId,user)},remove:function(assetId){return assetId=assetId.trim(),$firebase(reservationsRef.child("/bookings/"+assetId)).$remove(),$firebase(reservationsRef.child("/schedules/"+assetId)).$remove(),$firebase(reservationsRef.child("/assets/"+assetId)).$remove()},schedule:function(assetId){if(assetId=assetId.trim(),""===assetId)return!1;var asset=ReservationService.asset(assetId),scheduleRef=$firebase(reservationsRef.child("schedules/"+assetId));return asset.$asObject().$loaded().then(function(data){null==data.$value?ReservationService.user(assetId).$asObject().$loaded().then(function(data){ReservationService.cleanSchedule(scheduleRef,data.slot_size)}):ReservationService.cleanSchedule(scheduleRef,data.slot_size)}),scheduleRef},cleanSchedule:function(schedule,slotSize,wipeExisting){slotSize=slotSize||60,wipeExisting=wipeExisting||!1;var scheduleObject=schedule.$asObject(),numHours=minutesInDay/slotSize;return scheduleObject.$loaded().then(function(data){for(var i=0;7>i;i++)if(wipeExisting||angular.isUndefined(data[i])){var newObj={};schedule.$remove(i);for(var j=0;numHours>j;j++)newObj[j]=!0;schedule.$set(i,newObj)}}),!0},changeSlotSize:function(assetId,slotSize){assetId=assetId.trim();var scheduleRef=$firebase(reservationsRef.child("schedules/"+assetId));return ReservationService.cleanSchedule(scheduleRef,slotSize,!0)},bookings:function(assetId,unit,custom_year,custom_week,custom_day){assetId=assetId.trim();var year=custom_year||moment().get("year"),week=custom_week||moment().get("week"),day=custom_day||moment().dayOfYear();switch(unit){case"week":return $firebase(reservationsRef.child("bookings/"+assetId+"/"+year+"/"+week));case"day":return $firebase(reservationsRef.child("bookings/"+assetId+"/"+year+"/"+day));default:var startDay=day,endDay=day+6;return $firebase(reservationsRef.child("bookings/"+assetId+"/"+year).startAt(null,startDay.toString()).limitToFirst(endDay))}},book:function(assetId,dayOfYear,hour,custom_year){var year=custom_year||moment().get("year"),bookingRef=$firebase(reservationsRef.child("bookings/"+assetId+"/"+year+"/"+dayOfYear));return bookingRef.$set(hour,!0)},normalizeArrays:function(arrays,slotSize){slotSize=slotSize||60;for(var numHours=minutesInDay/slotSize,i=0;i<arrays.length;i++)for(var j=0;j<arrays[i].length;j++){for(var interpolateFactor=numHours/arrays[i][j].length,tempArray=[],k=0;k<arrays[i][j].length;k++)for(var f=0;interpolateFactor>f;f++)tempArray.push(arrays[i][j][k]);arrays[i][j]=tempArray}return arrays},compareAvailability:function(promises,slotSize){for(var assetRefs=[],i=0;i<promises.length;i++){for(var k=0;k<promises[i].length;k++)for(var j=0;j<promises[i][k].length;j++)promises[i][k][j]=promises[i][k][j]?1:0;assetRefs.push(promises[i])}if(assetRefs=ReservationService.normalizeArrays(assetRefs,slotSize),angular.isDefined(assetRefs)){var combinedArray=math.zeros([7,assetRefs[0][0].length]);for(i=0;i<assetRefs.length;i++)combinedArray=math.add(combinedArray,assetRefs[i]);return combinedArray}return!1}};return ReservationService}),angular.module("hyenaAngular").service("UserService",function(PLATFORM_ROOT,APIPATH,APIKEY,$http,toArrayFilter,$localStorage){var tokenString="token="+$localStorage.authToken,apiString="api_key="+APIKEY;return{get:function(userId,scope){return angular.isUndefined(scope)&&(scope=""),$http.get(APIPATH+"users/"+userId+"?with="+scope+"&api_key="+APIKEY)},update:function(userId,userData){return $http.put(APIPATH+"users/"+userId+"?"+tokenString+"&"+apiString,userData)},validate:function(user){return $http.post(APIPATH+"users/validate?api_key="+APIKEY,{ids:[user]})},"export":function(array){for(var exportArray=angular.copy(array),i=0;i<exportArray.length;i++)delete exportArray[i].uni_ferpa,delete exportArray[i].pivot,delete exportArray[i].id,delete exportArray[i].profile_image;return exportArray},getUserRelations:function(array,key){if(angular.isUndefined(array))return!1;key=key||"user",array=toArrayFilter(array);for(var userIdsArray=[],userIdsString="",i=0;i<array.length;i++)userIdsArray.push(array[i][key]),userIdsString+=array[i][key]+",";userIdsString=userIdsString.substring(0,userIdsString.length-1);var usersResponse=$http.get(APIPATH+"users?ids="+userIdsString+"&api_key="+APIKEY);return usersResponse.then(function(response){for(var i=0;i<response.data.length;i++)array[i][key]=response.data[i]}),array}}});